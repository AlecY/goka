// Code generated by go-bindata. DO NOT EDIT.
// sources:
// web/templates/common/base.go.html
// web/templates/common/head.go.html
// web/templates/common/menu.go.html
// web/templates/monitor/details.go.html
// web/templates/monitor/index.go.html
// web/templates/monitor/menu.go.html
// web/templates/query/index.go.html
// web/templates/index/index.go.html

package templates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataWebTemplatesCommonBasegohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4a\x2c\x4e\x55\xaa\xad\xe5" +
	"\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50" +
	"\xca\x48\x4d\x4c\x51\x52\xd0\x03\xa9\x82\x48\xda\x24\xe5\xa7\x54\xa2\xaa\xc9\x4d\xcd\x2b\x85\xa8\x41\x16\x4d\xce" +
	"\xcf\x2b\x49\xcd\x2b\x81\x6a\xd6\x87\x68\xb3\xd1\x87\x59\x91\x9a\x97\x52\x5b\xcb\x05\x08\x00\x00\xff\xff\xfd\x8f" +
	"\xc0\x67\x8d\x00\x00\x00")

func bindataWebTemplatesCommonBasegohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonBasegohtml,
		"web/templates/common/base.go.html",
	)
}



func bindataWebTemplatesCommonBasegohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonBasegohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/base.go.html",
		size: 141,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesCommonHeadgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x73\xf2\x36\x18\xbc\xe7\x57\x78\x74\xe1\x90\x5a\xc2\x98\x16" +
	"\x92\xc1\xe9\xa4\xa4\xe5\x23\x5f\x04\x12\x08\xbd\x74\x84\xf4\xd8\x96\x23\x4b\x8e\x25\x03\x2e\xe5\xbf\x77\x1c\x4a" +
	"\xc2\xa4\x79\x3f\x72\x78\x6f\x7e\xd6\xab\xf5\xee\xfa\x19\x6d\x36\x1c\x42\xa1\xc0\x41\x31\x50\x8e\xb6\xdb\xa3\x4e" +
	"\xf5\x70\x76\xe4\x38\x8e\xd3\x49\xc1\x52\x87\xc5\x34\x37\x60\x03\x54\xd8\xd0\x6d\xa3\xc3\x57\xb1\xb5\x99\x0b\xcf" +
	"\x85\x58\x06\x68\xed\x16\xd4\x65\x3a\xcd\xa8\x15\x0b\x09\xc8\x61\x5a\x59\x50\x36\x40\x02\x02\xe0\x11\xec\x4f\x5a" +
	"\x61\x25\x9c\x6d\x36\x38\xa3\x11\xfc\xf5\x32\x6d\xb7\x1d\xb2\x83\x0f\xc4\x15\x4d\x21\x40\x1c\x0c\xcb\x45\x66\x85" +
	"\x56\x07\x92\xe8\xff\xc4\xa5\x80\x55\xa6\x73\x7b\xc0\x5a\x09\x6e\xe3\x80\xc3\x52\x30\x70\x5f\x86\x9f\x1c\xa1\x84" +
	"\x15\x54\xba\x86\x51\x09\x81\xb7\x17\x92\x42\x3d\x39\x71\x0e\x61\x50\xab\x42\x99\x53\x42\x42\xad\xac\xc1\x91\xd6" +
	"\x91\x04\x9a\x09\x83\x99\x4e\x09\x33\xe6\xd7\x90\xa6\x42\x96\xc1\x6d\x06\xea\x78\x42\x95\x39\xee\x6a\xc5\x41\x19" +
	"\xe0\xa7\x7e\xbd\xfe\xcf\x2b\x5e\x73\x72\x90\x41\xcd\xd8\x52\x82\x89\x01\x6c\xcd\xb1\x65\x06\x41\xcd\xc2\xda\x56" +
	"\x4a\xb5\xc3\x8f\x57\x5c\xf4\xc6\x45\x3b\x37\x68\xef\x26\xa5\x6b\xc6\x15\x5e\x68\x6d\x8d\xcd\x69\x56\x0d\x95\xa1" +
	"\x57\x80\xf8\xd8\xc7\xad\x4a\xf6\x0d\xc3\xa9\x50\x98\x19\x83\x1c\xa1\x2c\x44\xb9\xb0\x65\x80\x4c\x4c\xfd\x76\xd3" +
	"\xfd\x6d\x3a\x17\x62\x32\xf8\x03\x2e\x3d\xde\x4b\x87\xe3\xf3\xa7\x92\x15\xfd\xf3\xfe\x38\xf2\x1b\xb7\xe9\x03\x5b" +
	"\xad\x5a\x5a\xf9\xe3\x39\x8f\x9a\x53\x7a\x3c\x4a\x27\xf7\xe6\x6f\x72\xf9\x4b\x7b\xb9\xe0\xbf\x27\x71\xb3\x40\x0e" +
	"\xcb\xb5\x31\x3a\x17\x91\x50\x01\xa2\x4a\xab\x32\xd5\x85\x41\x3f\x3a\x94\x6b\x63\x48\xe1\x6b\xd1\xf2\x7e\xa9\x6f" +
	"\x3c\x31\x36\xd3\xc7\x69\x53\x5d\xd4\x87\x85\x95\xaa\x47\x8d\xec\x0e\x8b\x6e\xab\x58\x25\xbc\x98\x9d\x4c\xa6\xf9" +
	"\xd5\x72\x3c\xd7\x7a\x94\x35\x16\xb3\x79\x94\x46\xc3\xbb\xc1\xe3\x4a\x92\x49\xf6\xad\x68\xbb\x8d\x74\x4c\xce\x02" +
	"\x44\x08\x4d\xe8\xfa\xfd\x9a\x54\x18\x91\x62\x61\x48\xf2\x5c\x40\x5e\x12\x0f\x7b\x1e\xae\xff\x37\xbd\x78\x4f\x0c" +
	"\x3a\xeb\x90\x9d\xd4\x07\xba\x9f\xad\x28\x79\xff\xdb\x93\x0f\xab\xb9\x67\x3f\x0f\xee\xc4\xa2\xde\x68\x3d\x2f\xcb" +
	"\x64\x72\x1d\xf6\x93\xdb\x6b\x7a\xf5\x14\x16\xb3\xe9\xfa\xcf\xf5\xc3\x48\x75\x87\xe7\x2d\xd9\x48\xbb\xb3\x9b\x41" +
	"\xd6\x3b\x49\x7b\xdd\x8b\xf6\xaa\x77\x33\x60\xa3\x8b\xd6\xfd\x9a\x7e\xb9\x9a\xef\xc8\xc2\xb8\x4a\x0c\x66\x52\x17" +
	"\x3c\x94\x34\x87\x77\x55\x49\xcd\xa9\x89\x71\x62\x48\x13\x7b\x2d\xec\xed\x81\x4f\xb4\xc5\xfd\xc4\x60\x9d\x47\x84" +
	"\xfb\x78\xd9\xfc\xe0\x64\x87\xec\xae\xb7\xcd\x06\x14\xdf\x6e\x8f\xfe\x0d\x00\x00\xff\xff\x25\x6d\x7e\xc6\x00\x05" +
	"\x00\x00")

func bindataWebTemplatesCommonHeadgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonHeadgohtml,
		"web/templates/common/head.go.html",
	)
}



func bindataWebTemplatesCommonHeadgohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonHeadgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/head.go.html",
		size: 1280,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesCommonMenugohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x3d\x85\x65\x36\xb0\x60\x7a\x81\xb4" +
	"\x0b\x38\x08\x72\x13\x57\x8d\x6a\x1c\x94\x36\x91\x50\x94\xbb\x23\x98\x36\xc0\xcc\x2a\xb1\xfe\x8b\xde\x8f\x4b\x71" +
	"\x3c\x7b\x65\xc0\x77\xd6\x84\xb5\x76\x46\x29\x83\x15\xda\xb6\x01\x95\xf2\x44\x11\xae\xc7\xb3\xe3\x99\x92\xec\x38" +
	"\x76\x00\xc6\xf9\x46\xd9\xa0\x3b\x79\xe5\xf8\x93\xfc\xcf\x8e\xa7\x0b\x93\x6b\x39\x80\xa1\x9b\x7c\x8a\xa4\x0e\x61" +
	"\x89\x3c\x0f\xf8\x80\x10\xf4\x55\xbc\x5d\x07\x5c\xfc\xb6\x87\xf8\x79\x99\xc8\xae\x8f\x4f\x38\xbe\x90\x5d\x4d\x4f" +
	"\x87\xa8\x77\x3e\xdf\x3b\x6d\x10\xa1\x8f\x8d\xcf\xde\xe7\xfc\xab\x4f\xf2\xc7\x7f\x62\x4a\xb9\x11\xa5\x4c\x12\xec" +
	"\x7a\xdd\xca\xdb\xf7\x07\x59\x77\x84\x4b\xad\x0d\x60\x75\x6d\x32\x7d\x92\x9b\x4a\xc7\xc5\xf4\x4a\x79\xec\x4a\x01" +
	"\x56\x07\xb5\x76\x5f\x01\x00\x00\xff\xff\x42\x5b\x78\xaf\x71\x01\x00\x00")

func bindataWebTemplatesCommonMenugohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonMenugohtml,
		"web/templates/common/menu.go.html",
	)
}



func bindataWebTemplatesCommonMenugohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonMenugohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/menu.go.html",
		size: 369,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorDetailsgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x5a\x5b\x8f\xdb\xba\x11\x7e\xf7\xaf\x98\xaa\x0f\x91\x10\x5b\xb6\x77" +
	"\xfb\x94\x5d\x1b\x68\x13\xb4\xc9\x69\x6e\x48\x16\x27\x0f\xe9\x22\xa0\xc5\xb1\xcd\x44\x22\x55\x92\xb2\xd7\xc7\xd0" +
	"\x7f\x2f\x48\xea\x46\xd9\xde\x75\x4e\xb2\xbd\xa0\x79\x58\xd8\xe4\xcc\xc7\xe1\x70\xe6\x9b\x21\x9d\xfd\x9e\xe2\x92" +
	"\x71\x84\x20\x11\x5c\x23\xd7\x41\x59\x0e\xae\x29\xdb\x40\x92\x12\xa5\x66\x81\x14\xdb\x60\x3e\x00\xe8\x8e\x19\x51" +
	"\xc2\x38\x4a\x3b\xd3\x9f\x4b\x47\x19\x1d\x4d\x2f\xea\xb9\xf5\x74\xbe\xdf\xc7\x9a\xe9\x14\xcb\xf2\x7a\xbc\x9e\x1e" +
	"\xea\xe4\x84\x63\x0a\xf6\xef\x88\xe2\x92\x14\xa9\xae\xb4\x4f\xcb\xad\x91\x50\xc6\x57\x8d\x9c\x59\xe9\x72\x7e\x43" +
	"\x16\x29\x82\xd2\x44\x33\xa5\x59\xa2\xae\xc7\xeb\xcb\x06\x69\x4c\xd9\xe6\x24\xec\x68\x21\xe8\xae\x8b\xa6\x2d\x54" +
	"\x25\xe2\xbe\xd8\xbf\x23\xa5\x25\xcb\x91\x76\x64\x8d\xb4\xb1\xa7\x3b\x62\xc6\xa4\x3f\x60\xc5\xc0\x7a\xc2\x2c\x2a" +
	"\x35\xd3\x4c\x70\xe0\x45\xb6\x40\x19\x80\x14\x5b\x95\x13\x3e\x0b\x2e\x82\xf9\xfb\x7a\xf6\x7a\xac\xd7\xf7\xa0\x7c" +
	"\xd4\x44\x17\x0a\xc4\x12\xf4\x1a\x21\x97\x22\x41\xa5\x44\x0f\xcc\x08\xe1\x19\x40\x0a\x68\x21\x19\x5f\x81\xc4\x44" +
	"\x6c\x50\xee\x02\x48\x44\xea\x60\x2e\x83\xf9\x87\x6a\xf4\xbb\x90\x0a\x0e\x9a\x65\xd8\x41\xba\x08\xe6\x1f\x0a\x6e" +
	"\x06\x4f\x00\x7d\x87\x13\x6f\x58\x86\x66\xf3\x39\x51\x0a\x69\x63\x37\x28\x01\x4b\x22\x83\xf9\xcd\xe9\x55\x6a\x88" +
	"\xb7\xd6\xfb\x06\x24\x43\xa5\xc8\x0a\x55\x0d\x83\x14\x72\x94\xa0\x30\x11\x9c\x06\xf3\x0f\x0f\x3b\xf1\x08\x56\x4a" +
	"\x56\x2b\xe3\x88\x05\xae\x19\xa7\xf0\xf2\xd3\x9b\x60\xfe\x9a\xac\xbe\x1f\xa8\xc8\x29\xd1\x3f\x62\xd2\x62\xa7\x4f" +
	"\xc0\xfc\xc5\xcc\x1c\xe2\x5c\x8f\x7d\xdf\x1b\x89\x5e\x90\x5f\x6b\x93\x35\xc0\x68\x95\x21\x1f\x9b\xc4\x0b\x7a\x9a" +
	"\x46\xae\x93\x5c\x63\x2b\x7e\x24\x33\xab\x8f\x83\xfd\x9e\x2d\x01\xff\x09\xb1\x44\x4e\x51\xde\xec\x72\x84\xa0\x8d" +
	"\xef\xb2\x7c\x44\x12\x79\x2e\x46\xbf\x08\xc6\x91\x82\xa5\x93\xff\x25\x12\x39\x9b\x38\x6e\x44\xce\x12\x58\xa0\x89" +
	"\xcd\xaf\x76\xb3\x81\x23\xcf\xdf\x49\x38\x67\x91\xcc\x99\xf9\xf1\x6e\xb9\x54\xa8\x47\x0f\xa7\xc9\x4b\xb6\x5a\xc3" +
	"\x96\x68\x94\x90\x11\xf9\x0d\x42\x61\x35\x6b\xeb\x38\xde\xe9\x7a\xa5\x6a\xab\x89\xe0\xaa\xc8\x90\x46\x3e\x43\xbe" +
	"\xfc\xf4\xe6\x81\xa5\x4c\xaa\x79\x86\x6f\x25\xd3\x1a\x39\x68\x01\xa9\x48\x48\x6a\x8b\x0e\x7a\x79\xf5\x49\x32\x8d" +
	"\xa3\xe3\x49\xfa\x7d\xc9\x65\x4e\xe8\x57\x86\xdb\x1f\xcc\xaa\xfd\x1e\x39\x2d\xcb\x81\x1b\x53\x89\x64\xb9\x06\xbd" +
	"\xcb\x71\x16\x68\xbc\xd3\xe3\xaf\x64\x43\xdc\x68\x30\x1f\x54\x28\x1b\x22\x21\x25\x4a\x37\x81\x05\x33\xa0\x97\xb1" +
	"\xdd\x73\x18\x5d\xf5\xa4\x4c\xde\xb8\x02\x70\x4a\x4a\xd9\x00\x7a\x43\x72\x98\xc1\x7e\xf2\x2c\x50\x5a\xe4\x26\x11" +
	"\x86\x30\x7d\x16\x30\xce\x34\x23\x29\xfb\xcd\x24\xe5\x10\x2e\x9e\x41\x50\x91\xb1\x1b\xb8\x7c\x16\xe4\x12\x73\x52" +
	"\x7d\xfd\x93\x99\x2f\x38\x37\xdf\xca\xab\xae\xc5\x8e\x35\x5e\xa0\x26\x2c\x35\xb6\x2c\x0b\x9e\x18\xe3\xc3\x26\x63" +
	"\x54\xb4\x1f\x34\x9e\x33\x2a\x8e\x19\x9b\x6d\xbe\xb7\x34\xd1\xd1\xa4\x44\x93\x68\xdf\xf1\xbf\x51\x6a\xe0\x5e\x51" +
	"\xb3\x63\xa2\xc9\xe7\xc9\xed\x55\x4f\x48\xd5\x0e\x31\xd3\xd3\xdb\xab\xc1\x91\xf9\xc2\x08\x34\xbe\xf9\x6c\x55\xe2" +
	"\x9b\x9a\x53\x55\xec\xf2\xce\xd7\x65\xcb\xf0\x98\x5c\x9a\x22\xf5\x0c\x85\x76\x85\x40\xb9\xf9\xa0\x6b\x63\xd9\xb3" +
	"\xc7\x65\xd1\x6b\xb2\xaa\x4c\xf2\x16\xa8\xbb\x80\xf8\xe5\x36\x83\xd1\x3d\xf3\x2e\x8b\x61\x04\xd3\xab\x41\xd7\xea" +
	"\xf1\x18\x9a\x63\x46\x93\xa7\x19\x2c\x76\x50\x31\x76\xcf\x12\x93\x64\x68\x53\x6f\x06\x93\xbe\x5b\x19\xcf\x0b\x7d" +
	"\xef\xa4\x2d\x6c\xc7\x66\x45\xa1\xef\xd1\x75\xb3\x27\x95\x2d\xf4\x0b\x4c\xc9\x0e\x66\x30\x9a\x5e\xf9\x7b\x53\x9a" +
	"\x48\x0d\x5b\xa6\xd7\x40\x20\x59\x13\x5b\x47\x44\x8e\x92\xd8\xe4\x11\xdc\x52\xd3\x2b\x83\x61\xf8\xc4\xf9\xef\xd8" +
	"\x0a\xcf\x8d\x2e\xcc\xe0\x4b\x6c\x51\xaa\xa3\xb6\x8a\x51\x6f\x4d\xb6\x84\x2d\x02\x15\xb0\x26\x1b\x84\x0d\x49\x0b" +
	"\x54\x86\x98\x56\xa8\xed\x6a\x64\xb3\x82\xa5\x14\xd9\x10\x52\xd4\x4f\x14\x68\xf2\x0d\x81\xe9\xf8\x18\x8a\x96\xcc" +
	"\x18\xcc\x81\x70\xc0\x2c\xd7\x3b\x48\x99\xd2\x43\x60\x1a\xb6\xa2\x48\x29\x24\x12\x8d\xdf\x08\xbc\x25\x6f\xfd\x60" +
	"\x6c\xcd\x8e\x15\xfb\x0d\xc3\x28\xb6\xa6\x84\x11\xcc\x61\xd2\x8b\x48\xcf\x89\x1d\xc5\x65\x4a\xf4\x1b\x92\x87\x81" +
	"\x9d\x0b\xa2\x38\x43\xc2\x3b\x48\x63\x98\x4e\xec\x3f\x3f\x80\x7b\x01\xe6\xb6\x99\xac\x31\xf9\x56\x6d\xcb\x7a\x86" +
	"\x40\x2e\x71\xc3\x44\xa1\x6c\x2e\x9a\xf0\x24\x9c\x82\x72\x6e\xca\x8c\xcb\xf4\x1a\x99\xf4\xc1\x12\x21\x25\x26\xba" +
	"\xf2\x6b\xef\xa8\x0c\xe9\xd5\x84\xe7\xd1\x64\xbc\x42\x1d\xea\x35\x53\x51\x3f\x67\x1b\x95\x9e\x4b\xec\x52\xf9\xce" +
	"\x9e\x98\xa3\x0c\x2d\x80\x6c\x04\xa3\x90\x09\xca\x96\x3b\x53\xc0\x98\x36\xde\x4a\x49\x82\x9e\xae\x31\x25\x29\x64" +
	"\x6d\xc9\x2f\x1f\xdf\xbd\x8d\x73\x22\x15\x86\xf6\xa3\xe9\x36\xf8\x8a\x2d\x77\x2e\x8a\x22\x2f\x80\xec\xca\x94\x2d" +
	"\x97\x66\xbd\xc6\x41\xce\x02\xc6\xab\x6a\xa6\x0e\x96\x33\x1d\xfc\x0b\xa3\x35\x83\x90\xe3\x16\x5e\x10\x8d\x61\x6d" +
	"\x43\xfc\x56\x6c\x23\x18\x41\x33\xd1\x6c\xda\xce\xd4\xe7\x18\x4f\x7c\x43\xba\xf9\xde\x62\x59\x76\x69\xf9\xa4\x85" +
	"\xea\x4e\x18\xc8\xda\x24\xcf\xe3\xd0\x50\xb8\x3b\x41\x23\x10\x8a\xc5\xd7\x5f\xcd\x97\x21\x28\x99\xd8\x4f\x11\xec" +
	"\x7b\xd5\x5f\xa2\x2e\x24\x3f\x18\x06\x78\x2e\x0a\xae\x9f\x41\x8d\x11\xdb\xef\x86\x0b\x2b\x28\x37\x30\x3c\xd0\xb3" +
	"\x8c\xd2\xd1\x73\x0c\xd3\xd1\xb3\x03\x7d\xbd\xd2\x77\x51\x39\x38\x38\x89\x95\x14\x45\x8e\xd4\x71\x8a\x21\x8c\x0c" +
	"\xe5\x0a\x3f\x31\xbd\x6e\x7d\x68\x27\x87\x1d\xdf\x55\x03\x8d\x4b\x7a\x21\xd1\x25\xd7\x9a\x81\xba\xeb\x44\x6d\xa6" +
	"\xda\xdd\x06\x51\xac\x8a\xcc\x4b\xd4\xf6\x34\x0e\x80\x6b\x6e\x7d\x00\xd9\x8a\xdd\x8b\x7c\xca\x17\xef\x2c\x85\x9f" +
	"\x72\x86\x9b\xed\x7a\xa3\x1e\x39\xe5\x0e\xaf\x60\xf4\xac\x76\xba\xbf\xdb\x21\x7e\xb5\x79\x08\xfb\x61\x97\x74\x43" +
	"\xa5\xfd\xec\x73\x93\xaa\xb8\x69\xe8\xd2\xdc\xa7\xa8\x2a\xee\x9f\x5c\x6b\x3a\x7f\xf2\xb4\xd3\xe1\x3c\x7d\x72\x3d" +
	"\xd6\x74\xfe\x0f\xfe\xe4\xa9\xb7\x83\x4a\xd2\x35\x19\x0f\x08\x35\xbd\xc5\x19\x60\x27\xfb\x8e\x07\x74\x1b\x16\x89" +
	"\xb5\xf8\x2b\xbb\x43\x1a\x5e\x44\x0f\xa8\x34\xe1\xfe\x9d\x2a\xf6\x38\x1a\x9d\xc9\x59\x3a\xb6\xb2\x79\xeb\x40\xa6" +
	"\xee\x77\x5a\x13\x7d\xe7\x9b\xd7\x09\xab\xa3\xf6\xb5\x81\x52\x76\x4e\xff\xbc\x6b\xb7\xfb\xd7\xa4\x1b\xcc\xda\x3e" +
	"\x58\xc5\x7f\x33\x43\x57\x1d\x44\x4c\x15\x9e\xa3\xd8\x84\xa7\xf2\xb4\xdb\x1b\x0b\xb8\x52\x65\x17\x70\x57\xf3\xc1" +
	"\x01\xe4\x6b\xa6\x5c\xda\x6b\xf1\x9e\x30\xa9\x5c\x22\x45\xb1\x12\x52\x87\x4d\x2f\x4f\x86\x8b\x68\x5f\xc5\xb9\x2d" +
	"\x93\xaf\xb8\x0e\x4d\xeb\x6e\x6a\x56\x33\xb0\x30\x03\x57\x65\x87\x0a\xc6\xe3\xea\x9a\x30\x04\xe4\xe6\xda\x69\xda" +
	"\x07\x89\x99\xd8\xa0\xed\x28\x3c\x7b\xa8\xbb\x03\x29\x4c\x31\xd1\x61\xf0\xc7\xfe\x0b\x49\x54\x4d\xfd\x39\x4d\xc3" +
	"\x20\x6e\x1c\xb1\x10\x77\x41\x14\x1b\xb4\xb0\xd9\xd1\xb0\x73\x0d\x89\xf6\x75\x86\x52\x73\xd7\x80\xae\x7d\x34\x5e" +
	"\xeb\x2c\x0d\x8f\x5d\x65\xba\x52\xff\x0e\xa3\x62\xeb\xa0\x30\x8a\x49\x9e\x23\xa7\x61\xa0\x65\x10\xc5\xf6\x25\x04" +
	"\x69\x18\x78\xc8\x43\xd0\xb2\xc0\xa8\x6b\xfc\x8d\x6f\x97\xb7\x47\xbc\x63\x3a\x8c\x62\xe7\xf7\x30\x3a\xf7\xb1\x08" +
	"\xbc\x8b\x9e\xb9\xa9\x3e\xd6\x1d\xef\xf2\xe8\xf4\xe9\x2b\xde\x19\xb7\xbb\xc7\xbc\xd8\x1d\x5e\xe5\xfc\xcb\x9b\x0f" +
	"\xd2\xbb\x93\xfd\xb7\x34\xde\xcd\xcb\xc3\xff\x67\xe3\xad\x7e\x56\xd7\x7d\x34\x0a\xce\x69\xb9\x8f\x87\x9d\x7f\x34" +
	"\x8f\xd2\x77\x54\xcf\x2a\xff\xa1\xee\xe4\x87\xfb\x11\xaf\x10\x77\x02\xe3\xb9\xa8\x1e\xa1\xdb\xba\xe8\xd1\xd8\x57" +
	"\xc1\x78\x53\xed\xea\xfe\xb0\xad\x7b\x9d\xc2\xea\x70\xa2\x0e\x5f\x6f\x0e\x6f\x3c\x95\xf7\xbf\xc4\x19\xc9\xdd\xfc" +
	"\xe7\xe9\x6d\x47\x85\x71\x8e\xb2\xba\x33\x7d\xc3\x5d\xff\xba\x64\x9f\x2d\xe8\xdf\xd1\x5c\xe7\x4d\xf8\x7d\xb4\x81" +
	"\x5f\x01\x4d\x6e\xa3\x38\x11\x3c\x21\x3a\x34\xaa\x7e\xf4\x55\x0b\x7f\x6e\xca\x6e\xa3\x63\x17\x1a\x3a\xd8\x21\xb4" +
	"\x06\x78\xec\xda\x2d\x7f\xe5\x61\x9d\x87\x85\x6f\x29\x5b\xda\x3a\x0f\x7f\x98\x81\x2d\xef\xbd\x6d\x54\xc6\x58\x91" +
	"\x91\x95\x38\x15\xd8\x8d\xe4\xf4\xd6\x3d\x73\xe2\x73\x91\xe5\x44\x62\xb8\xf8\x3c\xbd\xf5\x8c\xba\x1a\xfc\x9c\x06" +
	"\xa2\x79\x05\x7e\xb8\x48\xd7\xc1\x71\xaa\x46\x5f\xdc\xd7\x38\x34\xa5\xf1\x44\xcf\xf0\xd3\xed\xf8\xc1\x5e\xe1\xa8" +
	"\xbd\xfd\x2e\xe1\x6a\x50\x3f\x7f\x9b\x43\x58\x09\xd0\x98\xe5\xa9\x21\x3d\xe4\xd4\xd4\x2a\xc3\xfe\x89\xc8\x72\xc1" +
	"\x91\x6b\x60\x0a\xb8\x68\x7f\xdf\xa8\x4f\xb0\xed\x95\xb7\x8c\x53\xb1\x35\x8c\xf6\xca\x18\xbf\x21\x69\x1b\x76\xdd" +
	"\xa8\xa2\x97\xf1\x57\x25\x78\x18\xec\xf7\xf1\x82\x28\xfc\x92\x13\xbd\x2e\xcb\xb1\x71\xcf\x78\xbf\xef\xb4\x2c\x65" +
	"\x69\xbe\x6f\x88\x54\x31\xa3\x77\x65\x19\x0c\xfd\x67\xec\x66\x77\xe5\x10\x2e\x26\x93\x49\x1b\x57\xa6\x80\x91\x34" +
	"\x75\x35\xca\x3e\xad\xa6\xbb\xc1\x23\x2c\x5f\xfd\x96\xe0\x7e\x22\xb0\xff\x29\xc0\xfd\xae\xd0\xfb\x79\xe1\x5f\x01" +
	"\x00\x00\xff\xff\x0b\x65\x37\x46\x54\x20\x00\x00")

func bindataWebTemplatesMonitorDetailsgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorDetailsgohtml,
		"web/templates/monitor/details.go.html",
	)
}



func bindataWebTemplatesMonitorDetailsgohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorDetailsgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/details.go.html",
		size: 8276,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1582818183, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorIndexgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\xc1\x8e\xda\x30\x10\x86\xef\xfb\x14\xa3\x88\xf6\x54\x12\x15\xed" +
	"\x69\x1b\x90\xda\xaa\x42\x6c\xd1\x06\xb5\xa1\xd7\xca\xe0\x81\x58\xf5\xda\x96\xe3\x40\x2b\xcb\xef\x5e\x39\x90\x6c" +
	"\x48\xa0\x39\xd0\x5d\xb5\x17\xb0\x3d\xbf\xc7\xdf\x4c\xc6\x1e\x6b\x29\x6e\x98\x40\x08\xd6\x52\x18\x14\x26\x70\xee" +
	"\x26\xa6\x6c\x07\x6b\x4e\xf2\x7c\x1c\x68\xb9\x0f\x26\x37\x00\xcd\x35\x2f\x25\x4c\xa0\x2e\x2d\x6d\x1b\x1f\x3e\xd2" +
	"\xe1\xdb\xd1\xd1\x06\x10\x67\xa3\xc9\x42\xcb\x35\xe6\xb9\xd4\x79\x1c\x65\xa3\xca\x62\xed\x60\x45\x72\xfc\xae\x88" +
	"\xc9\xe0\x6e\x0c\x61\x3d\x73\xae\x96\x68\x22\xb6\x08\x03\x26\x28\xfe\x7c\x03\x03\x55\x79\x2a\x37\xd4\xb3\xbc\xde" +
	"\xd1\x87\xd3\x56\x28\x22\x90\x43\xf9\x3b\xa4\xb8\x21\x05\x37\x27\xda\x33\xea\x61\x86\x84\x32\xb1\x6d\xe9\x7c\xa8" +
	"\xb7\xa7\x42\xc3\x0c\xc7\x60\x12\x13\xc8\x34\x6e\xc6\x41\x33\x62\xe7\xa2\x1a\x3f\xb2\xf6\x10\xa1\x73\xc1\xc4\xda" +
	"\xa7\x28\xc3\xa9\x26\x2a\x0b\xa7\x5a\x16\xca\xb9\x38\x22\x9d\x23\xa3\xec\xb6\x85\x1b\x51\xb6\xeb\x8b\x60\x25\xe9" +
	"\xaf\x0e\xbe\xb5\xb0\x67\x26\x83\xc1\xd6\x1f\xea\x13\xdc\x06\x81\x46\x9a\x8f\xae\x0b\xde\x76\xd3\xf8\x6a\x48\xb7" +
	"\x38\xa3\xfe\xbb\xf9\x51\xe9\xb1\xf4\x1d\xce\x84\x2a\xcc\x57\xa3\x91\x3c\xe6\x1d\x9f\x00\x31\x67\x93\xd9\xc3\x62" +
	"\x99\xde\xf9\x22\xf1\x7b\xc3\x54\x2a\xb6\x76\x0e\x5e\x6b\xa2\xf5\x3b\xb0\x56\x69\x26\xcc\x06\x82\x57\x69\x70\x70" +
	"\x1f\x7e\x94\x14\xd7\x3e\x4b\x9c\x9d\x63\x42\x41\xcf\x1c\xd5\xcf\x7a\x2f\x99\x30\x29\x59\x71\xbc\x84\x7a\x9f\xcc" +
	"\x1e\xfe\x09\xd4\xb9\x94\x3f\x0a\xf5\x47\xd6\x79\x92\x7c\x5e\x2e\x5e\x02\xb6\xaa\x25\x79\x24\x6a\x70\x4e\xeb\xc5" +
	"\x0b\x94\xd3\x2f\xc9\x72\x91\xbe\xff\x30\xff\x54\x92\x3e\x39\xe9\xe1\x6d\x08\xaf\xa2\xe6\x52\xaa\xd3\xbc\xaa\x43" +
	"\xb5\x5e\xce\xea\x21\xa7\x7e\x63\x0f\x63\x29\x79\xa6\x02\x48\x0a\xd3\x7b\xb1\x92\x65\xfa\x02\x37\x2b\x8e\xba\x2f" +
	"\x83\xb5\x80\x82\xb6\x1f\x91\xce\x83\xd5\x5a\x38\x99\x36\x0f\xab\x0d\xc7\xc1\xd5\x6d\xea\x1b\xc3\xfd\xd5\x1d\x6a" +
	"\xc7\x70\x5f\x6a\xfd\xe0\xff\xec\x4b\x9e\xbc\xdd\x92\xfc\x5a\x55\x2a\xcf\xda\x87\xfe\x5a\x39\x1c\xff\x2a\xc9\xef" +
	"\x00\x00\x00\xff\xff\x33\x4f\x5a\x19\xeb\x08\x00\x00")

func bindataWebTemplatesMonitorIndexgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorIndexgohtml,
		"web/templates/monitor/index.go.html",
	)
}



func bindataWebTemplatesMonitorIndexgohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorIndexgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/index.go.html",
		size: 2283,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorMenugohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x41\xca\x83\x30\x10\x46\xf7\x9e\x62\x08\x2e\xfe\x1f\x4a\xb2\x2f" +
	"\x31\x5b\x2f\xd0\xbd\xa4\x3a\xd6\x80\x4d\x42\xa2\x6d\x61\x98\xbb\x97\x54\x70\x25\xa5\xab\x99\xc5\xe3\x7b\x8f\x68" +
	"\xc0\xd1\x79\x04\x71\x47\xbf\x76\x7d\xf0\x0b\xfa\x45\x30\x57\x44\xc9\xfa\x1b\x42\xed\xfc\x80\xaf\x13\xd4\x31\x85" +
	"\x1e\xce\x0d\xc8\xf2\x60\xce\x21\x65\xe6\x0a\x40\xcf\xce\x68\x0b\x53\xc2\xb1\x11\x44\xb5\xbc\xda\x8c\x5d\xb4\xcb" +
	"\xc4\xac\x76\x56\x11\x6d\x4b\xcc\xc2\x10\x7d\xd6\x64\x9b\x6c\x9c\x64\x9b\xc2\x1a\x99\xe1\x6f\x87\xff\xb5\xb2\x46" +
	"\xab\xd9\x99\x8a\x08\xfd\xf0\x35\xe7\xe1\xf0\xf9\x43\x49\xc1\x0e\x23\x2e\x21\xba\xbe\xe8\x0b\x71\x68\xde\xee\x3b" +
	"\x00\x00\xff\xff\xfc\x37\x76\xe3\x2b\x01\x00\x00")

func bindataWebTemplatesMonitorMenugohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorMenugohtml,
		"web/templates/monitor/menu.go.html",
	)
}



func bindataWebTemplatesMonitorMenugohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorMenugohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/menu.go.html",
		size: 299,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesQueryIndexgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x4c\x08\xa3\x39\xb4\xb2\xd0\xe4" +
	"\xd6\x50\xea\xa5\x39\x15\x28\x50\xf4\xd0\x63\x40\x89\x23\x89\x28\x4d\xaa\xe4\x30\x8e\x21\xe8\xbf\x2f\xf4\x19\x5b" +
	"\x96\xed\x2c\x16\x0b\xec\x45\xc9\x68\x3e\x38\xef\xcd\xe3\x58\x4d\x23\xb1\x50\x06\x81\xe5\xd6\x10\x1a\x62\x6d\x7b" +
	"\xc7\xa5\x7a\x83\x5c\x0b\xef\x13\xe6\xec\x9e\xa5\x77\x00\x00\xc7\x6f\xbb\x60\xa1\x0c\xba\xd1\xb7\xf4\x7f\x64\xad" +
	"\x79\x73\xab\xa3\x9d\x8c\x7e\x7d\x5c\xc4\x00\xf0\xea\x31\xfd\x3b\xa0\x3b\xc0\x9f\x78\xf0\x3c\xae\x1e\x97\x11\x4d" +
	"\xa3\x0a\xd8\xa2\x73\xd6\xb5\xed\x32\xfb\xe8\x0c\xa1\xd1\x11\xf4\xcf\x48\x0a\x53\xa2\x9b\x0c\xe5\x77\xca\x7b\x95" +
	"\x69\x64\xe0\xac\xc6\x31\xf6\xac\x17\x00\x9e\x05\x22\x6b\x80\x0e\x35\x26\x6c\x30\xd8\x0c\x42\x5b\x8f\x0c\xa4\x20" +
	"\x31\xd5\x9c\x2b\x71\x5f\x0b\x93\xfe\x44\x6a\x87\xfe\x99\xc7\xbd\xc5\xe3\xa1\xc0\xca\x31\x9e\x9c\x35\x65\xfa\xd2" +
	"\x81\xba\xe7\xf1\x68\x42\xd3\x0c\x38\xb7\x2f\xeb\x68\x63\xa9\xde\xce\xe9\x41\x23\xcf\x42\x07\xd2\xf6\xc2\x19\x65" +
	"\xca\x4f\xd3\x36\xc6\xff\xf0\xbc\xfd\x3b\xf4\x79\xca\xdc\xd8\xfc\xb7\x73\x37\xb1\xe7\x6d\x70\x39\xfa\x15\x3f\x2f" +
	"\xac\xdb\x81\x35\x3e\x64\x3b\x45\x09\xdb\x2b\x23\xed\x7e\xab\x6d\x2e\x48\x59\x03\x09\x3c\x34\xcd\x36\x13\x1e\x5f" +
	"\x6b\x41\x55\xdb\xc6\x4d\xb3\xf5\xa8\x31\x27\x94\xaf\x43\xdd\xb6\x8d\x1f\xe0\x67\xf0\x28\x5c\x5e\x6d\xdf\x84\x0e" +
	"\xf8\x0c\x0e\x29\x38\x03\x85\xd0\x1e\x9f\x57\x78\x5e\x0e\x4f\x99\x3a\x50\x54\x3a\x1b\x6a\x38\xfa\x3f\xd2\xe5\x85" +
	"\xe4\x2b\x05\xa2\x8c\xcc\x95\xac\x9b\x63\xce\xc8\x40\x46\x26\x92\x58\x88\xa0\x09\xa4\xb3\xb5\xb4\x7b\x13\x91\x2d" +
	"\x4b\x3d\x09\x60\x30\x12\x36\x79\x59\xba\x46\x4d\x2f\x8b\x59\x3f\xc2\x61\x27\x95\x5b\xea\x38\xe9\x34\xe8\x29\x7d" +
	"\xee\x63\x87\x26\xdc\x00\x08\xfd\xf0\x37\xf3\xe4\xe0\xb7\x04\x8e\xe7\xf8\x89\x64\xd7\xad\x1e\xd8\x28\x23\xf1\xfd" +
	"\x17\xd8\x0c\x88\xfa\x3a\x97\xf5\x74\xd6\xbd\x56\x29\x17\x50\x39\x2c\x12\x76\xdc\x4f\xaf\xa4\xcd\xc4\x52\xc7\xdd" +
	"\x6c\xf0\x58\xa4\x3c\xd6\xea\x33\x00\xd7\x55\x7f\xd2\x41\x1c\xf4\x15\x05\xad\x5d\xa6\x23\x77\xaf\x2a\x50\x32\x61" +
	"\x83\xbc\xd9\xa8\x18\xc2\x77\x9a\xf5\xd2\xdd\xa1\xa8\xfb\x59\x71\x56\x33\x70\xf8\x7f\x50\x0e\xe5\xf7\x97\xed\x70" +
	"\x69\x2f\xc9\x96\xa5\xff\xf4\x2d\xdf\x96\xd9\x15\x12\x2e\xb8\x78\xdc\x61\x3e\x7f\xdf\x34\xa8\x3d\xae\xed\x99\xeb" +
	"\x7b\x7a\xb1\x95\xff\xb2\x30\x4a\x0c\x0a\x1b\x8c\xbc\x87\x3f\x94\x84\x83\x0d\x50\x58\x57\x22\x01\x59\x10\x44\x22" +
	"\xaf\x80\x2a\xdc\xfd\x7e\xa1\xcb\x35\x79\x2c\x42\x17\xe6\xb0\x2e\xfb\x15\x76\x94\xc7\x2b\x17\xaf\x7f\x2b\xd4\xc2" +
	"\xa0\x86\xfe\x39\x6f\x8b\xc1\xf2\x21\xcf\xd1\xfb\x2b\x5f\x12\x43\x5c\x85\x42\x76\x04\xac\x70\x5c\x3d\x9d\x86\x92" +
	"\x22\x8d\xfd\x96\xf9\x0f\x0f\xdd\x35\xa9\x9e\xd2\x6b\xd8\xd6\x0f\xcc\xac\x3c\xac\x9d\x56\x3b\xec\x4a\x8f\xd8\x79" +
	"\xdc\xd9\x5f\xc5\xdc\x07\xd7\xa3\x6b\xfc\x33\x79\xbe\x04\x00\x00\xff\xff\x05\xda\xbe\x9a\xaf\x09\x00\x00")

func bindataWebTemplatesQueryIndexgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesQueryIndexgohtml,
		"web/templates/query/index.go.html",
	)
}



func bindataWebTemplatesQueryIndexgohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesQueryIndexgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/query/index.go.html",
		size: 2479,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesIndexIndexgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcf\x4a\xc4\x30\x10\x87\xef\x7d\x8a\x21\xec\xd1\x6e\x51\xf6\x24" +
	"\x6d\x0f\x3e\x80\xf8\x0a\x43\x67\xba\x09\xa4\xd3\xa5\x8d\xab\x30\xcc\xbb\x8b\x4b\xac\xa6\x0a\x5e\x92\xcc\x7c\x5f" +
	"\xfe\xfc\xa2\x4a\x3c\x06\x61\x70\xc3\x2c\x89\x25\x39\xb3\xaa\xa5\x70\x85\x21\xe2\xba\x76\x6e\x99\xdf\x5c\x5f\x01" +
	"\xfc\xec\x7d\xaa\x18\x84\x97\x1b\xd9\xb3\x58\x4f\x54\xdf\x3f\x64\x06\xa0\xba\xa0\x9c\x19\x0e\x41\x88\xdf\xef\xe0" +
	"\x30\xcc\xd3\x65\x16\x96\x04\x8f\x1d\x1c\xb7\x6a\x35\xcb\x3b\xfe\x3b\x71\x6f\x5c\x50\x38\xc2\x6d\xac\x89\x47\x7c" +
	"\x8d\xa9\x70\xff\xb0\x6b\xcf\x48\x41\xce\x3b\x0f\xa0\xf5\xa7\x52\x4c\x21\x45\x76\x7d\x8b\xe0\x17\x1e\x3b\xa7\xfa" +
	"\x1d\xe0\xf8\x84\x2b\xbf\x60\xf2\x66\x8d\xeb\x0b\xf2\x8c\x13\x9b\xb5\x0d\xfe\xba\xa0\xf1\xa7\xbe\x2a\x5f\xd7\x50" +
	"\xb8\x16\xe1\xca\x46\x51\xaa\xb2\x50\xfe\xaa\x0d\xe4\x45\x9e\xbe\x94\x8f\x00\x00\x00\xff\xff\xcd\x13\xfe\x16\xdd" +
	"\x01\x00\x00")

func bindataWebTemplatesIndexIndexgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesIndexIndexgohtml,
		"web/templates/index/index.go.html",
	)
}



func bindataWebTemplatesIndexIndexgohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesIndexIndexgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/index/index.go.html",
		size: 477,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"web/templates/common/base.go.html":     bindataWebTemplatesCommonBasegohtml,
	"web/templates/common/head.go.html":     bindataWebTemplatesCommonHeadgohtml,
	"web/templates/common/menu.go.html":     bindataWebTemplatesCommonMenugohtml,
	"web/templates/monitor/details.go.html": bindataWebTemplatesMonitorDetailsgohtml,
	"web/templates/monitor/index.go.html":   bindataWebTemplatesMonitorIndexgohtml,
	"web/templates/monitor/menu.go.html":    bindataWebTemplatesMonitorMenugohtml,
	"web/templates/query/index.go.html":     bindataWebTemplatesQueryIndexgohtml,
	"web/templates/index/index.go.html":     bindataWebTemplatesIndexIndexgohtml,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"web": {Func: nil, Children: map[string]*bintree{
		"templates": {Func: nil, Children: map[string]*bintree{
			"common": {Func: nil, Children: map[string]*bintree{
				"base.go.html": {Func: bindataWebTemplatesCommonBasegohtml, Children: map[string]*bintree{}},
				"head.go.html": {Func: bindataWebTemplatesCommonHeadgohtml, Children: map[string]*bintree{}},
				"menu.go.html": {Func: bindataWebTemplatesCommonMenugohtml, Children: map[string]*bintree{}},
			}},
			"index": {Func: nil, Children: map[string]*bintree{
				"index.go.html": {Func: bindataWebTemplatesIndexIndexgohtml, Children: map[string]*bintree{}},
			}},
			"monitor": {Func: nil, Children: map[string]*bintree{
				"details.go.html": {Func: bindataWebTemplatesMonitorDetailsgohtml, Children: map[string]*bintree{}},
				"index.go.html": {Func: bindataWebTemplatesMonitorIndexgohtml, Children: map[string]*bintree{}},
				"menu.go.html": {Func: bindataWebTemplatesMonitorMenugohtml, Children: map[string]*bintree{}},
			}},
			"query": {Func: nil, Children: map[string]*bintree{
				"index.go.html": {Func: bindataWebTemplatesQueryIndexgohtml, Children: map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

// Code generated by go-bindata. DO NOT EDIT.
// sources:
// web/templates/common/base.go.html
// web/templates/common/head.go.html
// web/templates/common/menu.go.html
// web/templates/monitor/details.go.html
// web/templates/monitor/index.go.html
// web/templates/monitor/menu.go.html
// web/templates/query/index.go.html
// web/templates/index/index.go.html

package templates


import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}


type asset struct {
	bytes []byte
	info  fileInfoEx
}

type fileInfoEx interface {
	os.FileInfo
	MD5Checksum() string
}

type bindataFileInfo struct {
	name        string
	size        int64
	mode        os.FileMode
	modTime     time.Time
	md5checksum string
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) MD5Checksum() string {
	return fi.md5checksum
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _bindataWebTemplatesCommonBasegohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xae\x4e\x49\x4d\xcb\xcc\x4b\x55\x50\x4a\x4a\x2c\x4e\x55\xaa\xad\xe5" +
	"\xb2\x51\x74\xf1\x77\x0e\x89\x0c\x70\x55\xc8\x28\xc9\xcd\xb1\xe3\xaa\xae\x2e\x49\xcd\x2d\xc8\x49\x2c\x49\x55\x50" +
	"\xca\x48\x4d\x4c\x51\x52\xd0\x03\xa9\x82\x48\xda\x24\xe5\xa7\x54\xa2\xaa\xc9\x4d\xcd\x2b\x85\xa8\x41\x16\x4d\xce" +
	"\xcf\x2b\x49\xcd\x2b\x81\x6a\xd6\x87\x68\xb3\xd1\x87\x59\x91\x9a\x97\x52\x5b\xcb\x05\x08\x00\x00\xff\xff\xfd\x8f" +
	"\xc0\x67\x8d\x00\x00\x00")

func bindataWebTemplatesCommonBasegohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonBasegohtml,
		"web/templates/common/base.go.html",
	)
}



func bindataWebTemplatesCommonBasegohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonBasegohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/base.go.html",
		size: 141,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesCommonHeadgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4d\x73\xf2\x36\x18\xbc\xe7\x57\x78\x74\xe1\x90\x5a\xc2\x98\x16" +
	"\x92\xc1\xe9\xa4\xa4\xe5\x23\x5f\x04\x12\x08\xbd\x74\x84\xf4\xd8\x96\x23\x4b\x8e\x25\x03\x2e\xe5\xbf\x77\x1c\x4a" +
	"\xc2\xa4\x79\x3f\x72\x78\x6f\x7e\xd6\xab\xf5\xee\xfa\x19\x6d\x36\x1c\x42\xa1\xc0\x41\x31\x50\x8e\xb6\xdb\xa3\x4e" +
	"\xf5\x70\x76\xe4\x38\x8e\xd3\x49\xc1\x52\x87\xc5\x34\x37\x60\x03\x54\xd8\xd0\x6d\xa3\xc3\x57\xb1\xb5\x99\x0b\xcf" +
	"\x85\x58\x06\x68\xed\x16\xd4\x65\x3a\xcd\xa8\x15\x0b\x09\xc8\x61\x5a\x59\x50\x36\x40\x02\x02\xe0\x11\xec\x4f\x5a" +
	"\x61\x25\x9c\x6d\x36\x38\xa3\x11\xfc\xf5\x32\x6d\xb7\x1d\xb2\x83\x0f\xc4\x15\x4d\x21\x40\x1c\x0c\xcb\x45\x66\x85" +
	"\x56\x07\x92\xe8\xff\xc4\xa5\x80\x55\xa6\x73\x7b\xc0\x5a\x09\x6e\xe3\x80\xc3\x52\x30\x70\x5f\x86\x9f\x1c\xa1\x84" +
	"\x15\x54\xba\x86\x51\x09\x81\xb7\x17\x92\x42\x3d\x39\x71\x0e\x61\x50\xab\x42\x99\x53\x42\x42\xad\xac\xc1\x91\xd6" +
	"\x91\x04\x9a\x09\x83\x99\x4e\x09\x33\xe6\xd7\x90\xa6\x42\x96\xc1\x6d\x06\xea\x78\x42\x95\x39\xee\x6a\xc5\x41\x19" +
	"\xe0\xa7\x7e\xbd\xfe\xcf\x2b\x5e\x73\x72\x90\x41\xcd\xd8\x52\x82\x89\x01\x6c\xcd\xb1\x65\x06\x41\xcd\xc2\xda\x56" +
	"\x4a\xb5\xc3\x8f\x57\x5c\xf4\xc6\x45\x3b\x37\x68\xef\x26\xa5\x6b\xc6\x15\x5e\x68\x6d\x8d\xcd\x69\x56\x0d\x95\xa1" +
	"\x57\x80\xf8\xd8\xc7\xad\x4a\xf6\x0d\xc3\xa9\x50\x98\x19\x83\x1c\xa1\x2c\x44\xb9\xb0\x65\x80\x4c\x4c\xfd\x76\xd3" +
	"\xfd\x6d\x3a\x17\x62\x32\xf8\x03\x2e\x3d\xde\x4b\x87\xe3\xf3\xa7\x92\x15\xfd\xf3\xfe\x38\xf2\x1b\xb7\xe9\x03\x5b" +
	"\xad\x5a\x5a\xf9\xe3\x39\x8f\x9a\x53\x7a\x3c\x4a\x27\xf7\xe6\x6f\x72\xf9\x4b\x7b\xb9\xe0\xbf\x27\x71\xb3\x40\x0e" +
	"\xcb\xb5\x31\x3a\x17\x91\x50\x01\xa2\x4a\xab\x32\xd5\x85\x41\x3f\x3a\x94\x6b\x63\x48\xe1\x6b\xd1\xf2\x7e\xa9\x6f" +
	"\x3c\x31\x36\xd3\xc7\x69\x53\x5d\xd4\x87\x85\x95\xaa\x47\x8d\xec\x0e\x8b\x6e\xab\x58\x25\xbc\x98\x9d\x4c\xa6\xf9" +
	"\xd5\x72\x3c\xd7\x7a\x94\x35\x16\xb3\x79\x94\x46\xc3\xbb\xc1\xe3\x4a\x92\x49\xf6\xad\x68\xbb\x8d\x74\x4c\xce\x02" +
	"\x44\x08\x4d\xe8\xfa\xfd\x9a\x54\x18\x91\x62\x61\x48\xf2\x5c\x40\x5e\x12\x0f\x7b\x1e\xae\xff\x37\xbd\x78\x4f\x0c" +
	"\x3a\xeb\x90\x9d\xd4\x07\xba\x9f\xad\x28\x79\xff\xdb\x93\x0f\xab\xb9\x67\x3f\x0f\xee\xc4\xa2\xde\x68\x3d\x2f\xcb" +
	"\x64\x72\x1d\xf6\x93\xdb\x6b\x7a\xf5\x14\x16\xb3\xe9\xfa\xcf\xf5\xc3\x48\x75\x87\xe7\x2d\xd9\x48\xbb\xb3\x9b\x41" +
	"\xd6\x3b\x49\x7b\xdd\x8b\xf6\xaa\x77\x33\x60\xa3\x8b\xd6\xfd\x9a\x7e\xb9\x9a\xef\xc8\xc2\xb8\x4a\x0c\x66\x52\x17" +
	"\x3c\x94\x34\x87\x77\x55\x49\xcd\xa9\x89\x71\x62\x48\x13\x7b\x2d\xec\xed\x81\x4f\xb4\xc5\xfd\xc4\x60\x9d\x47\x84" +
	"\xfb\x78\xd9\xfc\xe0\x64\x87\xec\xae\xb7\xcd\x06\x14\xdf\x6e\x8f\xfe\x0d\x00\x00\xff\xff\x25\x6d\x7e\xc6\x00\x05" +
	"\x00\x00")

func bindataWebTemplatesCommonHeadgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonHeadgohtml,
		"web/templates/common/head.go.html",
	)
}



func bindataWebTemplatesCommonHeadgohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonHeadgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/head.go.html",
		size: 1280,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesCommonMenugohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x90\x41\x4e\xc4\x30\x0c\x45\xf7\x3d\x85\x65\x36\xb0\x60\x7a\x81\xb4" +
	"\x0b\x38\x08\x72\x13\x57\x8d\x6a\x1c\x94\x36\x91\x50\x94\xbb\x23\x98\x36\xc0\xcc\x2a\xb1\xfe\x8b\xde\x8f\x4b\x71" +
	"\x3c\x7b\x65\xc0\x77\xd6\x84\xb5\x76\x46\x29\x83\x15\xda\xb6\x01\x95\xf2\x44\x11\xae\xc7\xb3\xe3\x99\x92\xec\x38" +
	"\x76\x00\xc6\xf9\x46\xd9\xa0\x3b\x79\xe5\xf8\x93\xfc\xcf\x8e\xa7\x0b\x93\x6b\x39\x80\xa1\x9b\x7c\x8a\xa4\x0e\x61" +
	"\x89\x3c\x0f\xf8\x80\x10\xf4\x55\xbc\x5d\x07\x5c\xfc\xb6\x87\xf8\x79\x99\xc8\xae\x8f\x4f\x38\xbe\x90\x5d\x4d\x4f" +
	"\x87\xa8\x77\x3e\xdf\x3b\x6d\x10\xa1\x8f\x8d\xcf\xde\xe7\xfc\xab\x4f\xf2\xc7\x7f\x62\x4a\xb9\x11\xa5\x4c\x12\xec" +
	"\x7a\xdd\xca\xdb\xf7\x07\x59\x77\x84\x4b\xad\x0d\x60\x75\x6d\x32\x7d\x92\x9b\x4a\xc7\xc5\xf4\x4a\x79\xec\x4a\x01" +
	"\x56\x07\xb5\x76\x5f\x01\x00\x00\xff\xff\x42\x5b\x78\xaf\x71\x01\x00\x00")

func bindataWebTemplatesCommonMenugohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesCommonMenugohtml,
		"web/templates/common/menu.go.html",
	)
}



func bindataWebTemplatesCommonMenugohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesCommonMenugohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/common/menu.go.html",
		size: 369,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorDetailsgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x5f\x73\xe3\xb6\x11\x7f\xbf\x4f\xb1\x65\x1f\x4c\xce\x59\xa4\xff" +
	"\xf4\xc9\xb6\xd4\x71\x73\x6d\xef\x32\xf6\x5d\x26\xf1\x34\x0f\x69\x26\x03\x11\x10\x85\x0b\x05\xb0\x00\x28\xc9\xd5" +
	"\xe8\xbb\x77\x00\xf0\x0f\x40\x91\x92\xec\x8b\x93\x26\x63\x3f\xe8\x44\x60\xf7\xb7\xbb\xc0\xee\x62\x17\xe2\x6d\x36" +
	"\x98\xcc\x28\x23\x10\xa4\x9c\x29\xc2\x54\xb0\xdd\xbe\xb9\xc1\x74\x09\x69\x8e\xa4\x1c\x07\x82\xaf\x82\xc9\x1b\x00" +
	"\x77\x4c\x93\x22\xca\x88\x30\x33\xdd\xb9\x7c\xb4\xc0\xa3\xf3\x8b\x7a\x6e\x7e\x3e\xd9\x6c\x62\x45\x55\x4e\xb6\xdb" +
	"\x9b\x64\x7e\xbe\xcb\x53\x20\x46\x72\x30\x9f\x23\x4c\x66\xa8\xcc\x55\xc5\x3d\x4c\x37\x27\x08\x53\x96\x35\x74\x5a" +
	"\xd2\xe5\xe4\x1b\x24\x14\x55\x94\x33\x78\x40\xd3\x9c\x40\xf8\x9d\x42\x8a\x44\x37\xc9\xfc\xb2\x01\x4c\x30\x5d\x0e" +
	"\xa2\x8f\xa6\x1c\x3f\xba\xa0\xca\xe0\x54\x24\xf6\xc1\x7c\x8e\xa4\x12\xb4\x20\xd8\xa1\xd5\xd4\x5a\x2d\x77\x44\x8f" +
	"\x09\x7f\xc0\x90\x81\x59\x90\x71\xd0\x28\x1c\x80\xe0\x2b\x59\x20\x36\x0e\x2e\x82\xd6\x8e\x9b\x44\xcd\xf7\xb0\x6b" +
	"\xf3\x4a\x09\x7c\x06\x6a\x4e\xa0\x10\x3c\x25\x52\x72\xe1\x83\x99\x35\x38\x02\x48\x02\x2e\x05\x65\x19\x08\x92\xf2" +
	"\x25\x11\x8f\x01\xa4\x3c\xb7\x30\x97\xc1\xe4\xdb\x6a\xf4\x49\x48\x25\x03\x45\x17\xc4\x41\xba\x08\x26\xdf\x96\x4c" +
	"\x0f\xee\x02\xdd\x24\xdd\xc5\xda\xbf\x7a\x0f\x74\x41\xb4\xf1\x05\x92\x92\xe0\x46\x6f\x90\x1c\x66\x48\x04\x93\x87" +
	"\x5e\x29\x1e\xc4\xc7\x72\x31\x25\x42\x83\x2c\x88\x94\x28\x23\xb2\x86\x21\x18\x0a\x22\x40\x92\x94\x33\x1c\x4c\xbe" +
	"\x3d\xbc\x88\x3d\x58\x39\xca\x32\xbd\x10\x53\x32\xa7\x0c\xc3\xfb\xef\xef\x83\xc9\x1d\xca\x9e\x0e\x54\x16\x18\xa9" +
	"\x2f\x51\x69\xfa\xa8\x06\x60\xfe\xa6\x67\x0e\x6f\x86\xa6\xe8\x78\xf7\x8d\xd2\xe1\x02\x14\x57\xa1\xa1\xf7\x9e\x4a" +
	"\x45\x53\x19\x74\x38\x35\x9d\x13\x55\x89\x21\xef\x09\xc9\xea\xeb\x9b\xcd\x86\xce\x80\xfc\x07\x62\x41\x18\x26\xe2" +
	"\xe1\xb1\x20\x10\xb4\xfe\xbd\xdd\xbe\x60\x12\xf9\xc0\x8a\x52\xc1\x83\x40\xb3\x19\x4d\xdd\xd4\x01\x70\x53\xe6\xc6" +
	"\x5a\xaa\x49\x1e\x78\xe1\x5b\x7a\x93\x94\xf9\xe4\xcd\x1f\x31\xcf\x68\x4f\x4b\x8c\x9f\x68\x57\xa2\x2c\xe5\x0b\xed" +
	"\xd5\x64\x49\x98\x92\x9d\x34\x81\x14\x81\xd0\xce\x24\xc6\xe9\xa2\x03\xe0\x77\x28\x83\x19\xd7\x4e\x3a\x93\x44\x01" +
	"\x62\xb8\x9b\x33\x2e\x4d\xd0\x40\x68\x29\x12\x3d\xdb\x03\xfa\xd4\xec\x71\x4f\x19\xb0\x26\x3e\x2a\x5b\x26\xf7\xf4" +
	"\xd0\x62\xdc\x2e\xb3\x1e\xbe\xdb\xe5\xa1\xa8\xbe\x47\xeb\x3e\x79\x68\x7d\x88\x8f\x32\xb8\x43\xd9\xb1\xaa\x19\xd2" +
	"\xe3\xb4\xb1\xa8\x7d\x0a\x3c\x2d\xf8\x4d\x38\xfc\x72\xc1\x0f\x2f\x16\xda\x9f\x4a\x95\x71\xed\xb9\xaf\xd1\x3d\x18" +
	"\xdd\xbc\x5e\xa3\x67\x47\xf7\x1f\x28\x10\x9f\x16\x07\xbc\x54\xbf\x93\x40\xf8\x8a\x8f\xbe\xe6\x94\x11\x6c\x0b\x65" +
	"\xf9\xff\x5b\x21\x17\x4d\x49\x6f\xb7\xec\x78\xb7\x36\x11\x0c\x53\xa2\x7d\xf9\xb3\x31\x36\x98\x18\x6b\x9f\x59\x54" +
	"\x1f\x55\x48\x1f\x59\x03\x7e\x32\x27\xd9\xe8\x70\x29\xf8\x9e\x66\x73\x58\x21\x45\x04\x2c\x90\xf8\xb9\x3e\x03\x6b" +
	"\xed\x18\x59\xab\x5a\x52\x65\x6a\xca\x99\x2c\x17\x04\x47\x7e\x32\x78\xff\xfd\xfd\x11\x69\xc0\x53\x7c\x25\xa8\x52" +
	"\x84\x81\xe2\x90\xf3\x14\xe5\x20\xf5\x02\x78\xb5\xe3\xf7\x82\x2a\x32\xea\x2f\x44\x9f\x16\x3b\x7a\x87\xfe\x45\xc9" +
	"\xea\x0b\x63\x66\xb3\x21\x0c\x6f\xb7\x55\xec\xc8\x54\xd0\x42\x81\x7a\x2c\xc8\x38\x50\x64\xad\x92\xcf\x68\x89\xec" +
	"\x68\xd0\x24\xf3\x25\x12\x90\x23\xa9\x3e\xd4\xc7\x98\x84\x31\xe0\xcb\xd8\x18\x1d\x46\xd7\x1d\xb2\x4f\x4d\x94\xef" +
	"\xa7\x7b\xa8\x4b\xe2\xfd\x64\x3a\x0e\xf7\x53\x49\xe3\x90\xf7\xa8\x80\x31\x6c\xce\xae\x02\xa9\x78\xa1\x03\xeb\x14" +
	"\xce\xaf\x02\xca\xa8\xa2\x28\xa7\xff\xd5\x41\x7e\x0a\x17\x57\x10\x54\x0d\x8c\x1d\xb8\xbc\x0a\x0a\x41\x0a\x54\x3d" +
	"\xfe\x45\xcf\x97\x8c\xe9\xa7\xed\xb5\xbb\x02\x92\xa4\xf2\x81\x7f\x44\x8c\xc3\x18\xce\xcf\xea\x3f\x8f\xc6\x56\xe3" +
	"\xef\x88\x42\x34\xd7\xfa\xce\x4a\x96\xea\x48\x0c\x9b\x28\x95\xd1\xe6\x4d\xb3\x5b\x74\xe6\x4c\xc0\x78\x0c\xac\xcc" +
	"\xf3\x68\xe3\x6c\xb0\x20\xaa\x14\xec\xba\x19\xd9\xb6\xcc\x5a\x9e\x6d\x57\x1e\xfc\xde\xc2\x95\x8b\x91\x42\xae\x44" +
	"\xcb\xd6\x08\xfd\x80\xf5\xa2\x22\x85\x7e\x38\xfb\xf1\xba\x43\x24\xeb\x35\xd7\xd3\xe7\x3f\x5e\xbb\x20\x49\x62\x7d" +
	"\x3d\x27\x52\xb6\x19\x40\x02\xe6\xec\x44\xc1\x1c\x2d\xab\x1c\x67\x41\x1c\x46\x3a\x0b\xcd\x50\xec\x6e\x7e\x8f\xdd" +
	"\xbb\x96\x7b\xb6\xbb\xfb\x0e\xe3\xd6\x01\x7e\xe8\x82\xc7\x36\x59\xf9\xda\xf7\x28\xa1\xe9\xf2\x9c\xe0\x8e\x12\x8d" +
	"\x84\x40\xda\xf9\xc0\x57\xc8\xd7\x47\x90\xf4\xef\x0c\x9b\xa6\xdb\xea\xe4\x49\xa8\xef\x07\x9a\x2f\x86\xf0\x4f\x63" +
	"\x08\x02\xf8\xeb\xb1\xe4\x57\x15\xe1\x47\xbe\xea\xee\x97\x70\xe9\xc6\x10\x32\xb2\x82\x77\x48\x91\xb0\x55\x2b\x82" +
	"\x11\x34\xc3\xc3\x12\xbf\x53\x48\x28\x43\x1f\x41\x62\x5c\x3d\x3e\x1b\x92\x66\x92\xe2\x18\x06\xe7\x75\x5f\xb2\x6f" +
	"\x31\xde\xaf\x16\x30\xda\x33\x6f\x0f\x02\xb8\xee\xee\x7d\x15\xa3\x83\xe2\xed\xb4\x2d\xda\xcc\xbc\xef\xbd\x39\x51" +
	"\x27\x12\xd2\x39\x49\x7f\x06\x3a\x83\x15\xb1\x4e\x8b\xa0\x10\x64\x49\x79\x29\x8d\xdb\xd7\xed\x96\xfe\x57\xcd\xc9" +
	"\x42\x67\x7a\x35\x27\x54\xf8\x60\x29\x17\x82\xa4\x0a\x96\x28\x2f\x89\xec\x68\xa2\x53\x58\x9d\xbe\xfc\xac\x17\x67" +
	"\x44\x85\x6a\x4e\x65\xd4\xf5\xce\x86\xa7\xe3\x8e\x49\x02\x98\xce\x66\x5a\x8d\x46\x4f\x1b\xa6\x94\x55\x47\x8e\xf4" +
	"\x18\xb4\x02\xba\x1b\x7c\xa7\xb9\x5c\x9f\x68\xbc\xc8\x73\x89\x46\xae\x99\x71\x37\xdf\x43\xad\xe2\xa7\x34\xa1\xeb" +
	"\x66\xd3\x8e\xba\xd0\xf5\x92\x3d\x3e\x57\xed\xf3\xa8\x5d\xaf\x3d\x64\x51\x52\x1b\x75\xed\x09\xdc\xfa\x7a\xfa\x3e" +
	"\xb2\x2b\xdc\x1e\x54\xf1\x57\xbc\x64\x83\x92\x5d\x9a\x21\xb1\x1d\x67\x1b\x14\x64\x09\xf6\x0b\x32\x34\xfd\x82\xdc" +
	"\x74\xd3\xf1\x24\x59\x79\xd2\x29\x7c\xfd\xdd\xa7\x8f\x71\x81\x84\x24\xa1\xf9\xaa\x8b\x4c\x96\xd1\xd9\xa3\xd5\x2a" +
	"\x8a\x7c\x67\xb3\x59\x16\x4e\x6e\x14\x9e\x9c\xbc\x75\xce\x85\xb7\x27\x37\x89\xc2\x93\x7f\xb3\x93\xb7\x9e\xad\x15" +
	"\xa5\xdd\xff\x03\x44\x6e\x46\x7a\x7b\x22\x8f\xa2\xd5\x9b\x15\x2b\xfe\x0f\xba\x26\x38\x3c\x8b\x8e\x94\x70\x87\xb2" +
	"\x43\x94\xad\x2f\x3c\x01\xde\xd9\xd8\x5e\x2e\xe7\x60\x76\x96\xf5\xb8\xcb\x39\xfb\xa7\x23\x34\x13\xbc\xd4\xb5\x4b" +
	"\x5b\x0b\xc4\xff\xd4\x43\xd7\x0e\x22\xc9\x25\x39\x86\xb1\x29\xfe\xa5\xc7\xdd\xd6\x7c\x50\x1d\xdf\x5c\x28\x40\x79" +
	"\xee\xf0\x7a\x95\x45\x33\x7c\x47\xa5\x82\x31\xfc\x14\x2b\xfe\x0d\xa2\x42\x86\x46\x68\x14\x6b\x80\xb0\xa9\x33\xd0" +
	"\xe9\x34\xda\x54\xce\x64\xbc\xef\x03\x53\xa1\xae\x2a\x74\x7e\x69\x06\xa6\x7a\xe0\x7a\x1b\x5d\xbb\x9a\xd8\x1a\xe6" +
	"\x14\x08\xd3\x45\xbc\x4e\xb7\x82\x2c\xf8\x92\x98\x0c\xec\xe9\x84\x6d\x05\x28\x49\x4e\x52\x15\x06\x7f\xee\xde\xa9" +
	"\x46\xd5\xd4\x6d\x9e\x87\x41\xdc\x58\x30\xe5\xeb\x20\x8a\x35\x5a\xe8\x59\x75\xea\x94\x49\xd1\xa6\x0e\x05\xac\x4b" +
	"\x21\x70\x75\xc4\xf1\x5c\x2d\xf2\xb0\xb7\xd6\x72\xc9\x7e\x2d\xcd\x62\xb3\x52\x61\x14\xa3\xa2\x20\x0c\x87\x81\x12" +
	"\x41\x14\x9b\x06\x93\xe0\x30\xf0\xd0\x4f\x41\x89\x92\x44\x47\x5a\x10\x93\x35\x55\x61\x14\xdb\x0d\x08\xa3\x63\xee" +
	"\x99\xfd\x82\xd4\x92\xd9\x1b\xe2\xdd\x32\xd4\xf7\xde\xe7\x55\xa1\xfe\x34\xad\x24\xd9\x94\x6b\xe4\x5e\xfb\x87\x33" +
	"\x59\x2b\x81\x52\x73\x7e\x57\x07\xb4\xb9\x4c\xd5\xae\xaf\xcc\x15\x96\x79\xd4\xc9\xb3\x55\xc8\x1e\xa7\x4b\x22\x50" +
	"\x0e\x39\x95\x4a\x1a\xb7\x4c\xe7\x88\x32\x53\x07\x74\x2a\x61\xae\xeb\x87\x14\x31\x20\x48\x52\xed\xc3\x45\x91\x3f" +
	"\x1a\x81\x0b\xca\x92\x05\x5a\x27\x68\x99\x01\x2f\x88\x40\x4a\x57\xc9\xdc\xa2\xc4\x1d\x5b\x52\x7d\xc6\xc8\xaf\x8c" +
	"\x14\x1d\x70\x46\x5e\x68\x2c\x8c\xe2\x05\x2a\xda\x68\x33\x76\xb4\x8e\x61\x1e\xed\x11\xe5\x05\x97\x85\x35\xb7\x50" +
	"\xcf\x46\x35\xb9\xaf\x07\x35\x47\xd9\xb3\x31\xed\x21\x7e\x87\xb2\x1e\x5c\x4c\x72\xf4\xf8\x6c\xe4\x77\x9a\xdb\xa0" +
	"\xfa\x5b\x54\x5d\x06\xd5\x0e\xb0\x22\x27\x82\x80\xbd\xc5\x53\x1c\x30\x95\x45\x8e\x1e\x63\x9f\xc7\xb8\x04\x9f\x7e" +
	"\xd6\x95\xdd\x8a\xe6\x39\x4c\x75\x3b\xc3\x05\xc1\xda\x3d\x3a\xfd\xb0\xe2\x90\xa2\x3c\x2d\x73\x5d\x6b\x08\xa4\xcf" +
	"\x79\xa4\xe5\xe4\x79\xc7\xbe\x4a\x83\x31\xf8\xa5\x52\xc0\xf8\x2a\xb8\xea\x29\xcf\x4e\x7d\x32\xe3\x23\xf7\x94\x05" +
	"\x70\xe5\xfa\x4b\xbc\xa0\x2c\x8c\x62\x03\x1e\xf6\xf2\xdc\x2e\xb3\x1d\x1e\x82\x0e\x30\xdd\xa3\xf5\x0e\x13\x5a\x0f" +
	"\xf2\x18\x4f\xab\x94\x6b\xbd\x6e\xaf\x6e\x86\xac\xd2\xcd\x65\xd9\xa7\x9a\x15\x63\x55\x73\x79\x86\x34\xd3\x47\x73" +
	"\x5f\xa8\xe9\x5a\xe0\xde\xf8\xd9\x4e\xfb\xd0\xcc\xdf\x2e\xb3\xbd\xf3\xf7\x68\xdd\x37\xaf\xd5\xda\x03\x5f\x4f\x0f" +
	"\xa0\x37\xdc\x35\x78\x67\x9e\xd7\xf1\x63\xe1\xeb\x50\xf4\x17\xba\x0b\xda\x30\x59\xa1\x2d\x93\xb7\xd4\x83\x5c\x56" +
	"\x97\x96\xcb\x5d\xec\xde\x18\xb6\xba\xb5\xe1\xbc\x5f\x3b\x43\x67\x35\x73\x59\xf6\xea\x66\xc5\x18\xbd\x5c\x1e\x5f" +
	"\xb3\x03\xdd\x58\x1b\xc2\xbf\x41\x37\x66\x73\x41\xcc\xf8\xca\x6b\x0a\x98\xee\xca\x86\x5b\xaf\x1a\x61\xa7\xd9\xea" +
	"\x38\x75\x0d\x5f\xa7\x8c\x51\x2b\xa1\x1e\x1a\x6a\x68\xa0\x1b\x00\x1e\xd6\xed\x32\xeb\x62\xdd\x2e\xb3\x23\xb0\xec" +
	"\x5e\xf9\x7a\xa1\xf5\x8e\x5e\x68\x3d\x8c\xe5\x07\x56\x0d\x55\x27\x1e\x07\xaa\x1e\x3a\x0c\xe5\x5b\x58\x27\xa4\x2e" +
	"\xd4\x5e\x0b\xfd\x80\xf5\xb5\xf2\x0c\xac\x87\x86\x1b\xd8\xfe\xef\x49\x02\x08\x63\xd3\xa8\x3b\x35\x4c\x73\xc1\x2d" +
	"\x78\xc9\x70\xa7\x3b\x74\x3c\xbb\xed\x0e\x2d\xf3\x17\xb5\x80\x15\x9d\xeb\x6c\x5e\x6b\x94\x9c\xbc\x75\x36\xe9\x60" +
	"\xaf\xd5\x85\xbb\x5d\x66\x43\x70\xdd\xa9\xa3\xb4\x43\xeb\x41\xed\x3a\x53\x7b\xe0\xdc\x84\xdb\x85\x0b\xeb\x6c\x97" +
	"\xb4\x17\xc4\x51\x43\x74\x11\x0d\x34\xbe\x5d\xe4\x1e\xbb\xc3\x3a\x29\x7e\x19\x72\xcf\x12\x84\x75\xea\x3c\x8c\xec" +
	"\xb8\x8a\xdb\xe2\x26\x49\x55\xea\x1b\x27\xb4\x55\xb8\x6c\x6f\xa0\x6d\x9d\x5c\x8d\x4f\xf9\x7a\x6f\x1b\xd7\xfd\x75" +
	"\xfc\x65\xdb\x38\xa7\x43\x19\x68\xde\x5e\x54\x9f\x67\x37\x6f\x03\x7a\xef\xb6\x6c\x3d\xfd\x98\xbd\x5b\xfa\x55\x1a" +
	"\x32\x5e\x8b\x92\xce\xad\xd6\x1f\xac\x25\xb3\x36\xfe\xe2\x3d\xd9\xf1\xb0\x6d\x53\xf6\xda\xe6\xf8\x3c\xaf\x6d\xce" +
	"\x8e\xfb\xbe\xb6\x39\xaf\x6d\x8e\xf3\x93\xfc\x6b\x9f\xd3\x8b\xf5\xda\xe7\xfc\x4e\xfb\x1c\xd7\xb5\x5f\x1b\x9d\xa7" +
	"\x34\x3a\xfd\x3f\x5e\xf9\x95\x7d\x55\xce\xed\x96\xf6\xd5\xc4\xa1\xda\x7e\xe7\x8d\xbf\xdf\xba\xb8\x7f\x59\x85\x5e" +
	"\xbe\xba\xaf\x7e\xcb\xd3\xdb\x94\x71\x50\x64\x51\x98\x5a\x8c\x30\x0c\xd4\xbe\xf2\x96\xf2\x45\xc1\x19\x61\x0a\xa8" +
	"\x04\xc6\xdb\xd7\x73\xea\x3d\x6e\x77\x7b\x45\x19\xe6\x2b\x1d\x36\x1f\xb4\xde\x4b\x94\xb7\x85\x67\xe4\x94\x6e\xf8" +
	"\x32\xfe\x2c\x39\x0b\x83\xcd\x26\x9e\x22\x49\x7e\x2a\x90\x9a\x6f\xb7\x89\x5e\x9e\x64\xb3\x71\x7e\x1c\xda\x6e\xf5" +
	"\xf3\x12\x09\x19\x53\xbc\xde\x6e\x83\x53\xff\x9d\xa8\xc6\xb8\xed\x29\x5c\x9c\x9d\x9d\xb5\x11\x9a\x24\xba\xb4\xcc" +
	"\x81\x2a\xa8\x5e\xd9\xca\x1f\xdf\xbc\x80\x78\x83\x79\x93\xd8\x77\xdc\xcc\xff\xdc\xb2\x2f\xc6\x75\xde\x8f\xfb\x5f" +
	"\x00\x00\x00\xff\xff\x7c\xba\xf8\x35\xf9\x35\x00\x00")

func bindataWebTemplatesMonitorDetailsgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorDetailsgohtml,
		"web/templates/monitor/details.go.html",
	)
}



func bindataWebTemplatesMonitorDetailsgohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorDetailsgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/details.go.html",
		size: 13817,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1583490762, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorIndexgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\xc1\x8e\xda\x30\x10\x86\xef\xfb\x14\xa3\x88\xf6\x54\x12\x15\xed" +
	"\x69\x1b\x90\xda\xaa\x42\x6c\xd1\x06\xb5\xa1\xd7\xca\xe0\x81\x58\xf5\xda\x96\xe3\x40\x2b\xcb\xef\x5e\x39\x90\x6c" +
	"\x48\xa0\x39\xd0\x5d\xb5\x17\xb0\x3d\xbf\xc7\xdf\x4c\xc6\x1e\x6b\x29\x6e\x98\x40\x08\xd6\x52\x18\x14\x26\x70\xee" +
	"\x26\xa6\x6c\x07\x6b\x4e\xf2\x7c\x1c\x68\xb9\x0f\x26\x37\x00\xcd\x35\x2f\x25\x4c\xa0\x2e\x2d\x6d\x1b\x1f\x3e\xd2" +
	"\xe1\xdb\xd1\xd1\x06\x10\x67\xa3\xc9\x42\xcb\x35\xe6\xb9\xd4\x79\x1c\x65\xa3\xca\x62\xed\x60\x45\x72\xfc\xae\x88" +
	"\xc9\xe0\x6e\x0c\x61\x3d\x73\xae\x96\x68\x22\xb6\x08\x03\x26\x28\xfe\x7c\x03\x03\x55\x79\x2a\x37\xd4\xb3\xbc\xde" +
	"\xd1\x87\xd3\x56\x28\x22\x90\x43\xf9\x3b\xa4\xb8\x21\x05\x37\x27\xda\x33\xea\x61\x86\x84\x32\xb1\x6d\xe9\x7c\xa8" +
	"\xb7\xa7\x42\xc3\x0c\xc7\x60\x12\x13\xc8\x34\x6e\xc6\x41\x33\x62\xe7\xa2\x1a\x3f\xb2\xf6\x10\xa1\x73\xc1\xc4\xda" +
	"\xa7\x28\xc3\xa9\x26\x2a\x0b\xa7\x5a\x16\xca\xb9\x38\x22\x9d\x23\xa3\xec\xb6\x85\x1b\x51\xb6\xeb\x8b\x60\x25\xe9" +
	"\xaf\x0e\xbe\xb5\xb0\x67\x26\x83\xc1\xd6\x1f\xea\x13\xdc\x06\x81\x46\x9a\x8f\xae\x0b\xde\x76\xd3\xf8\x6a\x48\xb7" +
	"\x38\xa3\xfe\xbb\xf9\x51\xe9\xb1\xf4\x1d\xce\x84\x2a\xcc\x57\xa3\x91\x3c\xe6\x1d\x9f\x00\x31\x67\x93\xd9\xc3\x62" +
	"\x99\xde\xf9\x22\xf1\x7b\xc3\x54\x2a\xb6\x76\x0e\x5e\x6b\xa2\xf5\x3b\xb0\x56\x69\x26\xcc\x06\x82\x57\x69\x70\x70" +
	"\x1f\x7e\x94\x14\xd7\x3e\x4b\x9c\x9d\x63\x42\x41\xcf\x1c\xd5\xcf\x7a\x2f\x99\x30\x29\x59\x71\xbc\x84\x7a\x9f\xcc" +
	"\x1e\xfe\x09\xd4\xb9\x94\x3f\x0a\xf5\x47\xd6\x79\x92\x7c\x5e\x2e\x5e\x02\xb6\xaa\x25\x79\x24\x6a\x70\x4e\xeb\xc5" +
	"\x0b\x94\xd3\x2f\xc9\x72\x91\xbe\xff\x30\xff\x54\x92\x3e\x39\xe9\xe1\x6d\x08\xaf\xa2\xe6\x52\xaa\xd3\xbc\xaa\x43" +
	"\xb5\x5e\xce\xea\x21\xa7\x7e\x63\x0f\x63\x29\x79\xa6\x02\x48\x0a\xd3\x7b\xb1\x92\x65\xfa\x02\x37\x2b\x8e\xba\x2f" +
	"\x83\xb5\x80\x82\xb6\x1f\x91\xce\x83\xd5\x5a\x38\x99\x36\x0f\xab\x0d\xc7\xc1\xd5\x6d\xea\x1b\xc3\xfd\xd5\x1d\x6a" +
	"\xc7\x70\x5f\x6a\xfd\xe0\xff\xec\x4b\x9e\xbc\xdd\x92\xfc\x5a\x55\x2a\xcf\xda\x87\xfe\x5a\x39\x1c\xff\x2a\xc9\xef" +
	"\x00\x00\x00\xff\xff\x33\x4f\x5a\x19\xeb\x08\x00\x00")

func bindataWebTemplatesMonitorIndexgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorIndexgohtml,
		"web/templates/monitor/index.go.html",
	)
}



func bindataWebTemplatesMonitorIndexgohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorIndexgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/index.go.html",
		size: 2283,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesMonitorMenugohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\x41\xca\x83\x30\x10\x46\xf7\x9e\x62\x08\x2e\xfe\x1f\x4a\xb2\x2f" +
	"\x31\x5b\x2f\xd0\xbd\xa4\x3a\xd6\x80\x4d\x42\xa2\x6d\x61\x98\xbb\x97\x54\x70\x25\xa5\xab\x99\xc5\xe3\x7b\x8f\x68" +
	"\xc0\xd1\x79\x04\x71\x47\xbf\x76\x7d\xf0\x0b\xfa\x45\x30\x57\x44\xc9\xfa\x1b\x42\xed\xfc\x80\xaf\x13\xd4\x31\x85" +
	"\x1e\xce\x0d\xc8\xf2\x60\xce\x21\x65\xe6\x0a\x40\xcf\xce\x68\x0b\x53\xc2\xb1\x11\x44\xb5\xbc\xda\x8c\x5d\xb4\xcb" +
	"\xc4\xac\x76\x56\x11\x6d\x4b\xcc\xc2\x10\x7d\xd6\x64\x9b\x6c\x9c\x64\x9b\xc2\x1a\x99\xe1\x6f\x87\xff\xb5\xb2\x46" +
	"\xab\xd9\x99\x8a\x08\xfd\xf0\x35\xe7\xe1\xf0\xf9\x43\x49\xc1\x0e\x23\x2e\x21\xba\xbe\xe8\x0b\x71\x68\xde\xee\x3b" +
	"\x00\x00\xff\xff\xfc\x37\x76\xe3\x2b\x01\x00\x00")

func bindataWebTemplatesMonitorMenugohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesMonitorMenugohtml,
		"web/templates/monitor/menu.go.html",
	)
}



func bindataWebTemplatesMonitorMenugohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesMonitorMenugohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/monitor/menu.go.html",
		size: 299,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesQueryIndexgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x6f\xe3\x36\x10\xbd\xe7\x57\x4c\x08\xa3\x39\xb4\xb2\xd0\xe4" +
	"\xd6\x50\xea\xa5\x39\x15\x28\x50\xf4\xd0\x63\x40\x89\x23\x89\x28\x4d\xaa\xe4\x30\x8e\x21\xe8\xbf\x2f\xf4\x19\x5b" +
	"\x96\xed\x2c\x16\x0b\xec\x45\xc9\x68\x3e\x38\xef\xcd\xe3\x58\x4d\x23\xb1\x50\x06\x81\xe5\xd6\x10\x1a\x62\x6d\x7b" +
	"\xc7\xa5\x7a\x83\x5c\x0b\xef\x13\xe6\xec\x9e\xa5\x77\x00\x00\xc7\x6f\xbb\x60\xa1\x0c\xba\xd1\xb7\xf4\x7f\x64\xad" +
	"\x79\x73\xab\xa3\x9d\x8c\x7e\x7d\x5c\xc4\x00\xf0\xea\x31\xfd\x3b\xa0\x3b\xc0\x9f\x78\xf0\x3c\xae\x1e\x97\x11\x4d" +
	"\xa3\x0a\xd8\xa2\x73\xd6\xb5\xed\x32\xfb\xe8\x0c\xa1\xd1\x11\xf4\xcf\x48\x0a\x53\xa2\x9b\x0c\xe5\x77\xca\x7b\x95" +
	"\x69\x64\xe0\xac\xc6\x31\xf6\xac\x17\x00\x9e\x05\x22\x6b\x80\x0e\x35\x26\x6c\x30\xd8\x0c\x42\x5b\x8f\x0c\xa4\x20" +
	"\x31\xd5\x9c\x2b\x71\x5f\x0b\x93\xfe\x44\x6a\x87\xfe\x99\xc7\xbd\xc5\xe3\xa1\xc0\xca\x31\x9e\x9c\x35\x65\xfa\xd2" +
	"\x81\xba\xe7\xf1\x68\x42\xd3\x0c\x38\xb7\x2f\xeb\x68\x63\xa9\xde\xce\xe9\x41\x23\xcf\x42\x07\xd2\xf6\xc2\x19\x65" +
	"\xca\x4f\xd3\x36\xc6\xff\xf0\xbc\xfd\x3b\xf4\x79\xca\xdc\xd8\xfc\xb7\x73\x37\xb1\xe7\x6d\x70\x39\xfa\x15\x3f\x2f" +
	"\xac\xdb\x81\x35\x3e\x64\x3b\x45\x09\xdb\x2b\x23\xed\x7e\xab\x6d\x2e\x48\x59\x03\x09\x3c\x34\xcd\x36\x13\x1e\x5f" +
	"\x6b\x41\x55\xdb\xc6\x4d\xb3\xf5\xa8\x31\x27\x94\xaf\x43\xdd\xb6\x8d\x1f\xe0\x67\xf0\x28\x5c\x5e\x6d\xdf\x84\x0e" +
	"\xf8\x0c\x0e\x29\x38\x03\x85\xd0\x1e\x9f\x57\x78\x5e\x0e\x4f\x99\x3a\x50\x54\x3a\x1b\x6a\x38\xfa\x3f\xd2\xe5\x85" +
	"\xe4\x2b\x05\xa2\x8c\xcc\x95\xac\x9b\x63\xce\xc8\x40\x46\x26\x92\x58\x88\xa0\x09\xa4\xb3\xb5\xb4\x7b\x13\x91\x2d" +
	"\x4b\x3d\x09\x60\x30\x12\x36\x79\x59\xba\x46\x4d\x2f\x8b\x59\x3f\xc2\x61\x27\x95\x5b\xea\x38\xe9\x34\xe8\x29\x7d" +
	"\xee\x63\x87\x26\xdc\x00\x08\xfd\xf0\x37\xf3\xe4\xe0\xb7\x04\x8e\xe7\xf8\x89\x64\xd7\xad\x1e\xd8\x28\x23\xf1\xfd" +
	"\x17\xd8\x0c\x88\xfa\x3a\x97\xf5\x74\xd6\xbd\x56\x29\x17\x50\x39\x2c\x12\x76\xdc\x4f\xaf\xa4\xcd\xc4\x52\xc7\xdd" +
	"\x6c\xf0\x58\xa4\x3c\xd6\xea\x33\x00\xd7\x55\x7f\xd2\x41\x1c\xf4\x15\x05\xad\x5d\xa6\x23\x77\xaf\x2a\x50\x32\x61" +
	"\x83\xbc\xd9\xa8\x18\xc2\x77\x9a\xf5\xd2\xdd\xa1\xa8\xfb\x59\x71\x56\x33\x70\xf8\x7f\x50\x0e\xe5\xf7\x97\xed\x70" +
	"\x69\x2f\xc9\x96\xa5\xff\xf4\x2d\xdf\x96\xd9\x15\x12\x2e\xb8\x78\xdc\x61\x3e\x7f\xdf\x34\xa8\x3d\xae\xed\x99\xeb" +
	"\x7b\x7a\xb1\x95\xff\xb2\x30\x4a\x0c\x0a\x1b\x8c\xbc\x87\x3f\x94\x84\x83\x0d\x50\x58\x57\x22\x01\x59\x10\x44\x22" +
	"\xaf\x80\x2a\xdc\xfd\x7e\xa1\xcb\x35\x79\x2c\x42\x17\xe6\xb0\x2e\xfb\x15\x76\x94\xc7\x2b\x17\xaf\x7f\x2b\xd4\xc2" +
	"\xa0\x86\xfe\x39\x6f\x8b\xc1\xf2\x21\xcf\xd1\xfb\x2b\x5f\x12\x43\x5c\x85\x42\x76\x04\xac\x70\x5c\x3d\x9d\x86\x92" +
	"\x22\x8d\xfd\x96\xf9\x0f\x0f\xdd\x35\xa9\x9e\xd2\x6b\xd8\xd6\x0f\xcc\xac\x3c\xac\x9d\x56\x3b\xec\x4a\x8f\xd8\x79" +
	"\xdc\xd9\x5f\xc5\xdc\x07\xd7\xa3\x6b\xfc\x33\x79\xbe\x04\x00\x00\xff\xff\x05\xda\xbe\x9a\xaf\x09\x00\x00")

func bindataWebTemplatesQueryIndexgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesQueryIndexgohtml,
		"web/templates/query/index.go.html",
	)
}



func bindataWebTemplatesQueryIndexgohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesQueryIndexgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/query/index.go.html",
		size: 2479,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}

var _bindataWebTemplatesIndexIndexgohtml = []byte(
	"\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcf\x4a\xc4\x30\x10\x87\xef\x7d\x8a\x21\xec\xd1\x6e\x51\xf6\x24" +
	"\x6d\x0f\x3e\x80\xf8\x0a\x43\x67\xba\x09\xa4\xd3\xa5\x8d\xab\x30\xcc\xbb\x8b\x4b\xac\xa6\x0a\x5e\x92\xcc\x7c\x5f" +
	"\xfe\xfc\xa2\x4a\x3c\x06\x61\x70\xc3\x2c\x89\x25\x39\xb3\xaa\xa5\x70\x85\x21\xe2\xba\x76\x6e\x99\xdf\x5c\x5f\x01" +
	"\xfc\xec\x7d\xaa\x18\x84\x97\x1b\xd9\xb3\x58\x4f\x54\xdf\x3f\x64\x06\xa0\xba\xa0\x9c\x19\x0e\x41\x88\xdf\xef\xe0" +
	"\x30\xcc\xd3\x65\x16\x96\x04\x8f\x1d\x1c\xb7\x6a\x35\xcb\x3b\xfe\x3b\x71\x6f\x5c\x50\x38\xc2\x6d\xac\x89\x47\x7c" +
	"\x8d\xa9\x70\xff\xb0\x6b\xcf\x48\x41\xce\x3b\x0f\xa0\xf5\xa7\x52\x4c\x21\x45\x76\x7d\x8b\xe0\x17\x1e\x3b\xa7\xfa" +
	"\x1d\xe0\xf8\x84\x2b\xbf\x60\xf2\x66\x8d\xeb\x0b\xf2\x8c\x13\x9b\xb5\x0d\xfe\xba\xa0\xf1\xa7\xbe\x2a\x5f\xd7\x50" +
	"\xb8\x16\xe1\xca\x46\x51\xaa\xb2\x50\xfe\xaa\x0d\xe4\x45\x9e\xbe\x94\x8f\x00\x00\x00\xff\xff\xcd\x13\xfe\x16\xdd" +
	"\x01\x00\x00")

func bindataWebTemplatesIndexIndexgohtmlBytes() ([]byte, error) {
	return bindataRead(
		_bindataWebTemplatesIndexIndexgohtml,
		"web/templates/index/index.go.html",
	)
}



func bindataWebTemplatesIndexIndexgohtml() (*asset, error) {
	bytes, err := bindataWebTemplatesIndexIndexgohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{
		name: "web/templates/index/index.go.html",
		size: 477,
		md5checksum: "",
		mode: os.FileMode(420),
		modTime: time.Unix(1559056733, 0),
	}

	a := &asset{bytes: bytes, info: info}

	return a, nil
}


//
// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
//
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
// nolint: deadcode
//
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

//
// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or could not be loaded.
//
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, &os.PathError{Op: "open", Path: name, Err: os.ErrNotExist}
}

//
// AssetNames returns the names of the assets.
// nolint: deadcode
//
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

//
// _bindata is a table, holding each asset generator, mapped to its name.
//
var _bindata = map[string]func() (*asset, error){
	"web/templates/common/base.go.html":     bindataWebTemplatesCommonBasegohtml,
	"web/templates/common/head.go.html":     bindataWebTemplatesCommonHeadgohtml,
	"web/templates/common/menu.go.html":     bindataWebTemplatesCommonMenugohtml,
	"web/templates/monitor/details.go.html": bindataWebTemplatesMonitorDetailsgohtml,
	"web/templates/monitor/index.go.html":   bindataWebTemplatesMonitorIndexgohtml,
	"web/templates/monitor/menu.go.html":    bindataWebTemplatesMonitorMenugohtml,
	"web/templates/query/index.go.html":     bindataWebTemplatesQueryIndexgohtml,
	"web/templates/index/index.go.html":     bindataWebTemplatesIndexIndexgohtml,
}

//
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
//
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, &os.PathError{
					Op: "open",
					Path: name,
					Err: os.ErrNotExist,
				}
			}
		}
	}
	if node.Func != nil {
		return nil, &os.PathError{
			Op: "open",
			Path: name,
			Err: os.ErrNotExist,
		}
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}


type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{Func: nil, Children: map[string]*bintree{
	"web": {Func: nil, Children: map[string]*bintree{
		"templates": {Func: nil, Children: map[string]*bintree{
			"common": {Func: nil, Children: map[string]*bintree{
				"base.go.html": {Func: bindataWebTemplatesCommonBasegohtml, Children: map[string]*bintree{}},
				"head.go.html": {Func: bindataWebTemplatesCommonHeadgohtml, Children: map[string]*bintree{}},
				"menu.go.html": {Func: bindataWebTemplatesCommonMenugohtml, Children: map[string]*bintree{}},
			}},
			"index": {Func: nil, Children: map[string]*bintree{
				"index.go.html": {Func: bindataWebTemplatesIndexIndexgohtml, Children: map[string]*bintree{}},
			}},
			"monitor": {Func: nil, Children: map[string]*bintree{
				"details.go.html": {Func: bindataWebTemplatesMonitorDetailsgohtml, Children: map[string]*bintree{}},
				"index.go.html": {Func: bindataWebTemplatesMonitorIndexgohtml, Children: map[string]*bintree{}},
				"menu.go.html": {Func: bindataWebTemplatesMonitorMenugohtml, Children: map[string]*bintree{}},
			}},
			"query": {Func: nil, Children: map[string]*bintree{
				"index.go.html": {Func: bindataWebTemplatesQueryIndexgohtml, Children: map[string]*bintree{}},
			}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
